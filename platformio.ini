; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[common]
lib_deps = 
	vtneil/vt-linalg
	vtneil/vt-arduino-tools
	vtneil/vt-serializer
	vtneil/vt-bme280
	vtneil/vt-lora-ebyte
	adafruit/Adafruit BNO08x
	sparkfun/SparkFun u-blox GNSS v3
	milesburton/DallasTemperature
	adafruit/Adafruit MS8607
	adafruit/Adafruit MPRLS Library
	adafruit/SdFat - Adafruit Fork

[env]
platform = ststm32
board = genericSTM32F411CE
board_build.mcu = stm32f411ceu6
framework = arduino
monitor_speed = 115200
build_unflags =
	-Os
build_flags = 
	-O2 -mcpu=cortex-m4 -mthumb -mfloat-abi=softfp -mfpu=fpv4-sp-d16 -flto
    -D LSE_VALUE=32768U
    -D HSE_VALUE=25000000U

[enable_usb_f411]
build_flags = 
	-D PIO_FRAMEWORK_ARDUINO_ENABLE_CDC
	-D USBCON
	-D HAL_PCD_MODULE_ENABLED

[env:f411ce-main]
upload_protocol = dfu
;upload_protocol = stlink
lib_deps =
	${common.lib_deps}
build_flags =
    ${env.build_flags}
	${enable_usb_f411.build_flags}
build_src_filter =
	+<main.cpp> -<.git/> -<.svn/>

[env:f411ce-gs-main]
upload_protocol = dfu
lib_deps =
	vtneil/vt-arduino-tools
	vtneil/vt-serializer
	vtneil/vt-lora-ebyte
build_flags =
    ${env.build_flags}
	${enable_usb_f411.build_flags}
build_src_filter =
	+<gs_main.cpp> -<.git/> -<.svn/>

[env:f411ce-kf-test]
upload_protocol = dfu
lib_deps = 
	${common.lib_deps}
build_flags =
    ${env.build_flags}
	${enable_usb_f411.build_flags}
build_src_filter =
	+<../test/kalman_compare.cpp> -<.git/> -<.svn/>

[env:f411ce-test]
upload_protocol = stlink
debug_tool = stlink
build_flags =
	${enable_usb_f411.build_flags}
build_src_filter = 
	+<../test/bootloader_test.cpp> -<.git/> -<.svn/>

[env:f411ce-sd-test]
upload_protocol = dfu
lib_deps =
	${common.lib_deps}
build_flags =
    ${env.build_flags}
	${enable_usb_f411.build_flags}
build_src_filter =
	+<../test/sd_test.cpp> -<.git/> -<.svn/>

[env:f411ce-sd-formatter]
upload_protocol = dfu
lib_deps =
	${common.lib_deps}
build_flags =
    ${env.build_flags}
	${enable_usb_f411.build_flags}
build_src_filter =
	+<../test/format_sd.cpp> -<.git/> -<.svn/>